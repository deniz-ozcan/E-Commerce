@model ProductViewModel
@section title {<title>Home | ScrapApp</title>}
<div class="container-fluid mt-3">
  <div class="row">
    <div class="col-3" style="max-width:300px;">
        @await Component.InvokeAsync("Categories")
    </div>
    <div class="col-9" style="min-width:1050px;">
      <div class="row">
        <div class="d-flex justify-content-end" style="margin-bottom: 5px;">
              <select class="form-select" style="background-color:#20c997;color:#fff;">
                <option value="" selected disabled>Sort By</option>
                <option value="PRICE_BY_ASC">High Price</option>
                <option value="PRICE_BY_DESC">Low Price</option>
                <option value="RATE_BY_ASC">High Rate</option>
                <option value="RATE_BY_DESC">Low Rate</option>
              </select>
        </div>
      </div>
      <div class="card-group">
        @if (Model.Products.Count == 0)
        {
          <h1 class="alert alert-warning text-center m-0">
            The product you are looking for was not found.
          </h1>
        }
        else{
          @foreach (var proc in Model.Products)
          {
            string cls = "";
            if(proc.is_updated==true){
              cls = "bg-primary";
            }
            <a asp-controller="Home" asp-action="Detail" asp-route-slug="@proc.Detail.Slug" class="col-sm-3 mb-3" style="text-decoration:none;color:black;">
              <div class="card mb-3 me-3 border-info @cls bg-dark popupcard">
                  <img src="@proc.Detail.Image" alt="" class="card-img-top img-fluid img-thumbnail"/>
                <div class="card-body">
                  <p class="card-title fs-6 info" style="color:#ff0000;display:inline;">@proc.Detail.Name</p>
                  <p class="card-title fs-6 info" style="color:#fff;display:inline;font-size:1rem;"> 
                    @proc.Detail.Model @proc.Detail.Ram RAM @proc.Detail.Storage SSD @proc.Detail.Processor @proc.Detail.System @proc.Detail.Screen
                  </p>
                </div>
                  <div class="card-footer">
                    <div class="list-group list-group-horizontal">
                    @if ((int)proc.Rate > 0 ){
                      <li class="list-group-item p-0 pt-2 itemsing1" style="font-size:1rem;border:none;">
                        <ul class="list-group list-group-horizontal" style="list-style-type: none;font-weight: 400;color:#FFC000">
                          @for (int i = 0; i < (int)proc.Rate ; i++){<li>★</li>}
                        </ul>
                      </li>
                    }
                    <li class="list-group-item ms-auto itemsing2" style="font-weight: 700;font-size:1rem;border:none;color:#f27a1a">@((int)proc.Price) ₺</li>
                  </div>
                </div>
              </div>
            </a>
          }
        }
      </div>
    </div>
  </div>
  <nav aria-label="Page navigation" class="mt-6">
    <ul class="pagination justify-content-center">
      @if(@Model.PageInfo.HasPrevious() == 1){
        <li class="page-item">
          <a class="page-link" asp-controller="Home" asp-action="">
              &laquo First Page
          </a>
        </li>
        <li class="page-item">
          <a class="page-link" href="?page=@(Model.PageInfo.CurrentPage-1)">Previous</a>
        </li>
        <li class="page-item">
          <a class="page-link" href="?page=@(Model.PageInfo.CurrentPage-1)">@(Model.PageInfo.CurrentPage-1)</a>
        </li>
      }
      <li class="page-item active" aria-current="page">
        <a class="page-link" href="?page=@Model.PageInfo.CurrentPage">@Model.PageInfo.CurrentPage</a>
      </li>
      @if(Model.PageInfo.HasNext() == 1){
        <li class="page-item">
          <a class="page-link" href="?page=@(Model.PageInfo.CurrentPage+1)">@(Model.PageInfo.CurrentPage+1)</a>
        </li>
        <li class="page-item">
          <a class="page-link" href="?page=@(Model.PageInfo.CurrentPage+1)">Next</a>
        </li>
        <li class="page-item">
          <a class="page-link" href="?page=@Model.PageInfo.TotalPages()">Last Page &raquo</a> 
        </li>
      }
    </ul>
  </nav>
</div>

@section JavaScript{
<script>
  "use strict";
  var inp1 = document.getElementById("s_screen");
  var inp2 = document.getElementById("s_system");
  var inp3 = document.getElementById("s_storage");
  var inp4 = document.getElementById("s_brand");
  var inp5 = document.getElementById("s_ram");
  var div1 = document.getElementById("s_Screen");
  var div2 = document.getElementById("s_System");
  var div3 = document.getElementById("s_Storage");
  var div4 = document.getElementById("s_Brand");
  var div5 = document.getElementById("s_Ram");
  var div6 = document.getElementById("s_APPLE");
  inp1.addEventListener('keyup', (evt) => {for (let i = 1; i < div1.childElementCount; i++) {div1.children[i].textContent.trim().toLocaleUpperCase().includes(inp1.value.trim().toLocaleUpperCase()) ? (div1.children[i].style.display = "block") : (div1.children[i].style.display = "none");}});
  inp2.addEventListener('keyup', (evt) => {for (let i = 1; i < div2.childElementCount; i++) {div2.children[i].textContent.trim().toLocaleUpperCase().includes(inp2.value.trim().toLocaleUpperCase()) ? (div2.children[i].style.display = "block") : (div2.children[i].style.display = "none");}});
  inp3.addEventListener('keyup', (evt) => {for (let i = 1; i < div3.childElementCount; i++) {div3.children[i].textContent.trim().toLocaleUpperCase().includes(inp3.value.trim().toLocaleUpperCase()) ? (div3.children[i].style.display = "block") : (div3.children[i].style.display = "none");}});
  inp4.addEventListener('keyup', (evt) => {for (let i = 1; i < div4.childElementCount; i++) {div4.children[i].textContent.trim().toLocaleUpperCase().includes(inp4.value.trim().toLocaleUpperCase()) ? (div4.children[i].style.display = "block") : (div4.children[i].style.display = "none");}});
  inp5.addEventListener('keyup', (evt) => {for (let i = 1; i < div5.childElementCount; i++) {div5.children[i].textContent.trim().toLocaleUpperCase().includes(inp5.value.trim().toLocaleUpperCase()) ? (div5.children[i].style.display = "block") : (div5.children[i].style.display = "none");}});
  inp5.addEventListener('keyup', (evt) => {for (let i = 1; i < div6.childElementCount; i++) {div5.children[i].textContent.trim().toLocaleUpperCase().includes(inp5.value.trim().toLocaleUpperCase()) ? (div5.children[i].style.display = "block") : (div5.children[i].style.display = "none");}});
  var elms = document.getElementsByName("price_rad");
  for (let i = 0; i < 6; i++){
    elms[i].addEventListener("change", (evt) => {
      if(elms[i].checked == true){
        document.getElementById("min_price").value = elms[i].value.split("-")[0];
        document.getElementById("max_price").value = elms[i].value.split("-")[1];
      }
    });
  }
  document.addEventListener('DOMContentLoaded', function() {
  var queryString = window.location.search;
  var params = new URLSearchParams(queryString);
  var checkboxes = document.querySelectorAll('input[type="checkbox"]');
  checkboxes.forEach(function(checkbox) {
    var value = checkbox.value;
    checkbox.checked = params.has(value);
  });
});
</script>
}
